data:
    task: segmentation.multimodal
    class: s3dis.S3DISFusedDataset
    dataroot: data
    fold: 5
    first_subsampling: 0.05
    use_category: False
    sample_per_epoch: 3000
    pre_collate_transform:
        - transform: PointCloudFusion    # One point cloud per area
        - transform: SaveOriginalPosId    # Required so that one can recover the original point in the fused point cloud
        - transform: GridSampling3D    # Samples on a grid
          params:
                size: ${data.first_subsampling}
                setattr_full_pos: True  # Required to keep the full-resolution points for later local features computation
        - transform: SaveOriginalPosId    # Required so that one can recover the multimodal mappings after the transforms
          params:
                key: ${data.multimodal.settings.mapping_key}
        - transform: PCAComputePointwise
          params:
                num_neighbors: 50  # heuristic: at least 30
                r: 0.1  # heuristic: 2 * voxel
                use_full_pos: True
                use_cuda: True
#                workers: 6  # careful with your RAM usage
        - transform: EigenFeatures
          params:
                norm: True
                linearity: True
                planarity: True
                scattering: True
        - transform: RemoveAttributes
          params:
                attr_names: [full_pos, eigenvalues, eigenvectors]
    multimodal:    # Each modality must be inserted in a dedicated 'multimodal' section
        modality: image
        settings:
            mapping_key: mapping_index  # hardcoded key used to sync 3D points and modality mappings
            ref_size: [768, 384]
            exact_splatting: True
            proj_upscale: 2
            r_max: 8
            r_min: 0.05
            growth_k: 0.5
            growth_r: 100  # growth_k and growth_r set so that correction factor is ~1.1 at r_max=8
            train_pixel_credit: 4  # Choose based on GPU capacity, model ko/pixel cost and 3D batch_size
            test_pixel_credit: 4
            k_coverage: 2
        pre_transform:
            - transform: LoadImages    # Read images from disk
              params:
                    ref_size: ${data.multimodal.settings.ref_size}
            - transform: NonStaticMask    # Compute acquisition mask
              params:
                    ref_size: ${data.multimodal.settings.ref_size}
                    proj_upscale: ${data.multimodal.settings.proj_upscale}
                    n_sample: 5
            - transform: MapImages    # Compute the 3D-2D mapping
              params:
                    ref_size: ${data.multimodal.settings.ref_size}
                    proj_upscale: ${data.multimodal.settings.proj_upscale}
                    voxel: ${data.first_subsampling}
                    r_max: ${data.multimodal.settings.r_max}
                    r_min: ${data.multimodal.settings.r_min}
                    growth_k: ${data.multimodal.settings.growth_k}
                    growth_r: ${data.multimodal.settings.growth_r}
                    exact: ${data.multimodal.settings.exact_splatting}
            - transform: NeighborhoodBasedMappingFeatures  # Compute local density and occlusion
              params:
                    k: 50  # empirically-chosen heuristic [30-100] is fine
                    voxel: ${data.first_subsampling}
                    density: True
                    occlusion: True
                    use_cuda: True
        train_transforms:
            - transform: SelectMappingFromPointId  # Select mappings after 3D points sampling
            - transform: CenterRoll  # Roll images to center mappings
            - transform: PickImagesFromMappingArea  # Remove images with not enough mappings
              params:
                    use_bbox: ${data.multimodal.settings.exact_splatting}
            - transform: ColorJitter  # Radiometric augmentation
              params:
                      brightness: 0.6
                      contrast: 0.6
                      saturation: 0.7
            - transform: RandomHorizontalFlip
            - transform: ToFloatImage  # Convert uint8 image to float
            - transform: AddPixelHeightFeature  # Pixel height as image channel
            - transform: CropImageGroups  # Compute cropping groups to minimize embedding cost
              params:
                    padding: 6
                    min_size: 64
            - transform: PickImagesFromMemoryCredit  # Pick images based on memory credit
              params:
                    img_size: ${data.multimodal.settings.ref_size}
                    n_img: ${data.multimodal.settings.train_pixel_credit}
                    k_coverage: ${data.multimodal.settings.k_coverage}
        test_transforms:
            - transform: SelectMappingFromPointId  # Select mappings after 3D points sampling
            - transform: CenterRoll  # Roll images to center mappings
            - transform: PickImagesFromMappingArea  # Remove images with not enough mappings
              params:
                    use_bbox: ${data.multimodal.settings.exact_splatting}
            - transform: ToFloatImage  # Convert uint8 image to float
            - transform: AddPixelHeightFeature  # Pixel height as image channel
            - transform: CropImageGroups  # Compute cropping groups to minimize embedding cost
              params:
                    padding: 6
                    min_size: 64
            - transform: PickImagesFromMemoryCredit  # Pick images based on memory credit
              params:
                    img_size: ${data.multimodal.settings.ref_size}
                    n_img: ${data.multimodal.settings.test_pixel_credit}
                    k_coverage: ${data.multimodal.settings.k_coverage}
        val_transforms: ${data.multimodal.test_transforms}
