data_multimodal:
  point_id: point_index
  img_size: [2048, 1024]
  map_size_high: [2048, 1024]
  map_size_low: [512, 256]
data:
  task: multimodal.segmentation
  class: s3dis.S3DISFusedDataset
  dataroot: data
  fold: 5
  first_subsampling: 0.04
  use_category: False
  pre_collate_transform:
      - transform: PointCloudFusion        # One point cloud per area
      - transform: SaveOriginalPosId       # Required so that one can recover the original point in the fused point cloud
      - transform: GridSampling3D          # Samples on a grid
        params:
          size: ${data.first_subsampling}
      - transform: SaveOriginalPosId       # Required so that one can recover the multimodal mappings after the transforms
        params:
          key: ${data_multimodal.point_id}
  multimodal:                              # Each modality must be inserted in a dedicated 'multimodal' section
    modality: image
    pre_transform:
      - transform: NonStaticImageMask      # Find acquisition mask
        params:
          mask_size: ${data_multimodal.map_size_high}
          n_sample: 5
      - transform: PointImagePixelMapping  # Define the 3D-2D mapping
        params:
          map_size_high: ${data_multimodal.map_size_high}
          map_size_low: ${data_multimodal.map_size_low}
          crop_top: 0
          crop_bottom: 0
          voxel: ${data.first_subsampling}
          r_max: 8
          r_min: 0.1
          growth_k: 0.5
          growth_r: 100  # growth_k and growth_r set so that correction factor is ~1.1 at r_max=8
          empty: 0
          no_id: -1
          key: ${data_multimodal.point_id}
    train_transforms:
      - transform: PointImagePixelMappingFromId
        params:
          key: ${data_multimodal.point_id}
    test_transforms: ${data.multimodal.train_transforms}
    val_transforms: ${data.multimodal.test_transforms}
  train_transforms:
    - transform: RandomNoise
      params:
        sigma: 0.001
    - transform: RandomRotate
      params:
        degrees: 180
        axis: 2
    - transform: RandomScaleAnisotropic
      params:
        scales: [0.8, 1.2]
    - transform: RandomSymmetry
      params:
        axis: [True, False, False]
    - transform: DropFeature
      params:
        drop_proba: 0.2
        feature_name: rgb
    - transform: XYZFeature
      params:
        add_x: False
        add_y: False
        add_z: True
    - transform: AddFeatsByKeys
      params:
        list_add_to_x: [True, True]
        feat_names: [rgb, pos_z]
        delete_feats: [True, True]
    - transform: Center
  test_transform:
    - transform: XYZFeature
      params:
        add_x: False
        add_y: False
        add_z: True
    - transform: AddFeatsByKeys
      params:
        list_add_to_x: [True, True]
        feat_names: [rgb, pos_z]
        delete_feats: [True, True]
    - transform: Center
  val_transform: ${data.test_transform}
